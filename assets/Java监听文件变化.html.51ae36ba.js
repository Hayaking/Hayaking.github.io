import{_ as n,V as s,W as a,Y as t}from"./framework.591e63b2.js";const p={},e=t(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WatchServiceDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">//目录</span>
        <span class="token keyword">var</span> baseDir <span class="token operator">=</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">//文件</span>
        <span class="token keyword">var</span> target_file <span class="token operator">=</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">//构造监听服务</span>
        <span class="token keyword">var</span> watcher <span class="token operator">=</span> <span class="token class-name">FileSystems</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newWatchService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//注册监听的目录，以及监听事件</span>
        <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>baseDir<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>
                watcher<span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">WatchEvent<span class="token punctuation">.</span>Kind</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>
                        <span class="token comment">// 文件创建事件</span>
                        <span class="token class-name">StandardWatchEventKinds</span><span class="token punctuation">.</span><span class="token constant">ENTRY_CREATE</span><span class="token punctuation">,</span>
                        <span class="token comment">// 文件修改事件</span>
                        <span class="token class-name">StandardWatchEventKinds</span><span class="token punctuation">.</span><span class="token constant">ENTRY_MODIFY</span><span class="token punctuation">,</span>
                        <span class="token comment">// 文件删除事件</span>
                        <span class="token class-name">StandardWatchEventKinds</span><span class="token punctuation">.</span><span class="token constant">ENTRY_DELETE</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token class-name">SensitivityWatchEventModifier</span><span class="token punctuation">.</span><span class="token constant">HIGH</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//每隔3秒拉取监听key</span>
            <span class="token keyword">var</span> key <span class="token operator">=</span> watcher<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//监听key为null,则跳过</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//获取监听事件</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> event <span class="token operator">:</span> key<span class="token punctuation">.</span><span class="token function">pollEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name"><span class="token namespace">var<span class="token punctuation">.</span></span>Kind</span> kind <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">kind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//异常事件跳过</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>kind <span class="token operator">==</span> <span class="token class-name">StandardWatchEventKinds</span><span class="token punctuation">.</span><span class="token constant">OVERFLOW</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">//获取监听Path</span>
                <span class="token keyword">var</span> path <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Path</span><span class="token punctuation">)</span> event<span class="token punctuation">.</span><span class="token function">context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//只关注目标文件</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>target_file<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                
                <span class="token keyword">if</span> <span class="token punctuation">(</span>kind <span class="token operator">==</span> <span class="token class-name">StandardWatchEventKinds</span><span class="token punctuation">.</span><span class="token constant">ENTRY_CREATE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// todo</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>kind <span class="token operator">==</span> <span class="token class-name">StandardWatchEventKinds</span><span class="token punctuation">.</span><span class="token constant">ENTRY_MODIFY</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// todo</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>kind <span class="token operator">==</span> <span class="token class-name">StandardWatchEventKinds</span><span class="token punctuation">.</span><span class="token constant">ENTRY_DELETE</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token comment">// todo</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            key<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),c=[e];function o(l,i){return s(),a("div",null,c)}const k=n(p,[["render",o],["__file","Java监听文件变化.html.vue"]]);export{k as default};
