const l=JSON.parse('{"key":"v-ea3a58d4","path":"/db/mysql/3.%E6%97%A5%E5%BF%97.html","title":"3. 日志","lang":"zh-CN","frontmatter":{"author":"haya","title":"3. 日志","date":"2020-05-03T00:00:00.000Z","article":true,"timeline":true,"category":["mysql"],"tag":["mysql"],"description":"一、undo log 每次在事务执行过程中，都记录下回滚时需要的信息到一个日志里，那么在事务执行中途发生了错误，以通过这个日志回滚到事务之前的数据。 实现这一机制就是 ==undo log（回滚日志）==，它保证了事务的的原子性（Atomicity）。 undo log 是用于撤销回退的日志。在事务没提交之前，MySQL 会先记录更新前的数据到 und...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/db/mysql/3.%E6%97%A5%E5%BF%97.html"}],["meta",{"property":"og:site_name","content":"Haya的博客"}],["meta",{"property":"og:title","content":"3. 日志"}],["meta",{"property":"og:description","content":"一、undo log 每次在事务执行过程中，都记录下回滚时需要的信息到一个日志里，那么在事务执行中途发生了错误，以通过这个日志回滚到事务之前的数据。 实现这一机制就是 ==undo log（回滚日志）==，它保证了事务的的原子性（Atomicity）。 undo log 是用于撤销回退的日志。在事务没提交之前，MySQL 会先记录更新前的数据到 und..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-31T06:09:24.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"haya"}],["meta",{"property":"article:tag","content":"mysql"}],["meta",{"property":"article:published_time","content":"2020-05-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-31T06:09:24.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"一、undo log","slug":"一、undo-log","link":"#一、undo-log","children":[{"level":3,"title":"1.1 版本链","slug":"_1-1-版本链","link":"#_1-1-版本链","children":[]},{"level":3,"title":"1.2 刷盘","slug":"_1-2-刷盘","link":"#_1-2-刷盘","children":[]}]},{"level":2,"title":"二、Buffer Pool","slug":"二、buffer-pool","link":"#二、buffer-pool","children":[]},{"level":2,"title":"三、redo log","slug":"三、redo-log","link":"#三、redo-log","children":[{"level":3,"title":"3.1 WAL","slug":"_3-1-wal","link":"#_3-1-wal","children":[]},{"level":3,"title":"3.2 redo log作用","slug":"_3-2-redo-log作用","link":"#_3-2-redo-log作用","children":[]},{"level":3,"title":"3.3 redo log 要写到磁盘，数据也要写磁盘，为什么要多此一举？","slug":"_3-3-redo-log-要写到磁盘-数据也要写磁盘-为什么要多此一举","link":"#_3-3-redo-log-要写到磁盘-数据也要写磁盘-为什么要多此一举","children":[]},{"level":3,"title":"3.4  redo log buffer","slug":"_3-4-redo-log-buffer","link":"#_3-4-redo-log-buffer","children":[]},{"level":3,"title":"3.5 redo log buffer 刷盘时机","slug":"_3-5-redo-log-buffer-刷盘时机","link":"#_3-5-redo-log-buffer-刷盘时机","children":[]}]},{"level":2,"title":"四、binlog","slug":"四、binlog","link":"#四、binlog","children":[{"level":3,"title":"4.1 redo log 和 binlog 有什么区别","slug":"_4-1-redo-log-和-binlog-有什么区别","link":"#_4-1-redo-log-和-binlog-有什么区别","children":[]},{"level":3,"title":"4.2 redo log 不能用于文件恢复","slug":"_4-2-redo-log-不能用于文件恢复","link":"#_4-2-redo-log-不能用于文件恢复","children":[]},{"level":3,"title":"4.3 主从复制","slug":"_4-3-主从复制","link":"#_4-3-主从复制","children":[]},{"level":3,"title":"4.4 binlog刷盘时机","slug":"_4-4-binlog刷盘时机","link":"#_4-4-binlog刷盘时机","children":[]},{"level":3,"title":"4.5 开启binlog","slug":"_4-5-开启binlog","link":"#_4-5-开启binlog","children":[]}]},{"level":2,"title":"五、两阶段提交","slug":"五、两阶段提交","link":"#五、两阶段提交","children":[{"level":3,"title":"5.1 两阶段提交的过程","slug":"_5-1-两阶段提交的过程","link":"#_5-1-两阶段提交的过程","children":[]}]},{"level":2,"title":"六、查询日志","slug":"六、查询日志","link":"#六、查询日志","children":[{"level":3,"title":"6.1 开启查询日志","slug":"_6-1-开启查询日志","link":"#_6-1-开启查询日志","children":[]}]},{"level":2,"title":"七、慢查询日志","slug":"七、慢查询日志","link":"#七、慢查询日志","children":[{"level":3,"title":"7.1 开启慢查询日志","slug":"_7-1-开启慢查询日志","link":"#_7-1-开启慢查询日志","children":[]},{"level":3,"title":"7.2 查看慢查询日志","slug":"_7-2-查看慢查询日志","link":"#_7-2-查看慢查询日志","children":[]}]}],"git":{"createdTime":1672389870000,"updatedTime":1672466964000,"contributors":[{"name":"guohaoyang","email":"haoyang.guo@duobei.com","commits":2}]},"readingTime":{"minutes":13.7,"words":4111},"autoDesc":true,"localizedDate":"2020年5月3日","filePathRelative":"db/mysql/3.日志.md"}');export{l as data};
