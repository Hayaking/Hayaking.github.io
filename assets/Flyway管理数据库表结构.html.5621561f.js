import{_ as n,V as s,W as a,Y as t}from"./framework.591e63b2.js";const e={},p=t(`<h2 id="一、为什么要用flyway" tabindex="-1"><a class="header-anchor" href="#一、为什么要用flyway" aria-hidden="true">#</a> 一、为什么要用Flyway</h2><p>Flyway 是一款开源的数据库版本管理工具。Flyway 可以独立于应用实现管理并跟踪数据库变更，支持数据库版本自动升级。</p><p>说白了就是，每一次数据库表结构变更时，把修改的语句交给flyway去执行，不再交由人去手动执行，避免了因为人手动执行导致的错误。</p><h2 id="二、如何使用" tabindex="-1"><a class="header-anchor" href="#二、如何使用" aria-hidden="true">#</a> 二、如何使用</h2><p>首先是搭建项目，这里展示flyway + spring boot+ mysql的示例。</p><h3 id="_2-1-gradle配置参考" tabindex="-1"><a class="header-anchor" href="#_2-1-gradle配置参考" aria-hidden="true">#</a> 2.1 gradle配置参考</h3><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code>plugins <span class="token punctuation">{</span>
    id <span class="token string">&#39;org.springframework.boot&#39;</span> version <span class="token string">&#39;2.6.2&#39;</span>
    id <span class="token string">&#39;io.spring.dependency-management&#39;</span> version <span class="token string">&#39;1.0.11.RELEASE&#39;</span>
    id <span class="token string">&#39;java&#39;</span>
<span class="token punctuation">}</span>

group <span class="token operator">=</span> <span class="token string">&#39;com.tosee&#39;</span>
sourceCompatibility <span class="token operator">=</span> <span class="token string">&#39;11&#39;</span>

repositories <span class="token punctuation">{</span>
    <span class="token function">mavenLocal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://maven.aliyun.com/nexus/content/groups/public/&#39;</span> <span class="token punctuation">}</span>
    maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://maven.aliyun.com/nexus/content/repositories/jcenter&#39;</span> <span class="token punctuation">}</span>
    <span class="token function">mavenCentral</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

dependencies <span class="token punctuation">{</span>
    implementation <span class="token string">&#39;com.zaxxer:HikariCP:5.0.0&#39;</span>
    implementation <span class="token string">&#39;mysql:mysql-connector-java:8.0.27&#39;</span>
    <span class="token comment">// 引入flyway</span>
    implementation <span class="token string">&#39;org.flywaydb:flyway-core:7.2.1&#39;</span>
    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;com.alibaba.nacos:nacos-client:2.0.3&quot;</span></span><span class="token punctuation">)</span>
    implementation <span class="token string">&#39;org.springframework.cloud:spring-cloud-starter-bootstrap:3.1.0&#39;</span>
    implementation <span class="token string">&#39;com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config:2021.1&#39;</span>
    annotationProcessor <span class="token interpolation-string"><span class="token string">&quot;org.springframework.boot:spring-boot-configuration-processor&quot;</span></span>

<span class="token punctuation">}</span>

dependencyManagement <span class="token punctuation">{</span>
    imports <span class="token punctuation">{</span>
        mavenBom <span class="token interpolation-string"><span class="token string">&quot;org.springframework.boot:spring-boot-dependencies:2.6.2&quot;</span></span>
        mavenBom <span class="token interpolation-string"><span class="token string">&quot;org.springframework.cloud:spring-cloud-dependencies:2021.0.0&quot;</span></span>
        mavenBom <span class="token interpolation-string"><span class="token string">&quot;com.alibaba.cloud:spring-cloud-alibaba-dependencies:2.2.0.RELEASE&quot;</span></span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

bootJar <span class="token punctuation">{</span>
    mainClass<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;xxxxxx&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-配置数据变更文件" tabindex="-1"><a class="header-anchor" href="#_2-2-配置数据变更文件" aria-hidden="true">#</a> 2.2 配置数据变更文件</h3><p>在src/main/resources创建 db\\数据库名 的文件夹，有多个库就建多个。</p><p>在需要变更的数据库的文件夹里创建sql文件，具体格式如下：</p><ul><li>V[version]__[name].sql: V开头的文件只会被flyway执行一次</li><li>R__[name].sql: R开头的文件每次flyway运行时，都会被执行</li></ul><blockquote><p>V开头的SQL执行优先级要比R开头的SQL优先级高</p></blockquote><h4 id="_2-2-1-示例" tabindex="-1"><a class="header-anchor" href="#_2-2-1-示例" aria-hidden="true">#</a> 2.2.1 示例</h4><blockquote><p>V1.0.0__create_table.sql</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">database</span> <span class="token identifier"><span class="token punctuation">\`</span>app_device<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token identifier"><span class="token punctuation">\`</span>app_device<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>

<span class="token comment">-- 设备</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>device<span class="token punctuation">\`</span></span>
<span class="token punctuation">(</span>
    <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span>          <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>   <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>sn<span class="token punctuation">\`</span></span>          <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>device_no<span class="token punctuation">\`</span></span>   <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>  <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>deleted<span class="token punctuation">\`</span></span>     <span class="token keyword">tinyint</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>   <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;0&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;删除状态 0未删除 1已删除&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>create_time<span class="token punctuation">\`</span></span> <span class="token keyword">datetime</span>     <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span><span class="token punctuation">,</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">\`</span>deleted_key<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>deleted<span class="token punctuation">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">\`</span>device_no_key<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>device_no<span class="token punctuation">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">\`</span>sn_key<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>sn<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
<span class="token keyword">ENGINE</span> <span class="token operator">=</span> <span class="token keyword">InnoDB</span>
<span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span> <span class="token operator">=</span> utf8mb4<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-配置flyway" tabindex="-1"><a class="header-anchor" href="#_2-3-配置flyway" aria-hidden="true">#</a> 2.3 配置Flyway</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// dbNameMap从配置文件里读取自定义的配置</span>
<span class="token comment">// key是数据库别名</span>
<span class="token comment">// value是数据库名</span>
dbNameMap<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// blackList从配置文件里读取自定义的配置</span>
    <span class="token comment">// 如果在黑名单里，就不执行操作</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>blackList <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>blackList<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> dbNameMap<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 配置datasource</span>
    <span class="token class-name">HikariDataSource</span> dataSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HikariDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    dataSource<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>
    dataSource<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>
    dataSource<span class="token punctuation">.</span><span class="token function">setJdbcUrl</span><span class="token punctuation">(</span><span class="token string">&quot;jdbc:mysql://&quot;</span> <span class="token operator">+</span> address <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> port <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> value <span class="token operator">+</span> <span class="token string">&quot;?characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=false&amp;useJDBCCompliantTimezoneShift=true&amp;useLegacyDatetimeCode=false&amp;serverTimezone=Asia/Shanghai&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Flyway</span><span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">dataSource</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span>
            <span class="token comment">// 配置数据库变更sql的文件所在目录</span>
            <span class="token punctuation">.</span><span class="token function">locations</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:db/&quot;</span> <span class="token operator">+</span> key<span class="token punctuation">)</span>
            <span class="token comment">// 配置编码</span>
            <span class="token punctuation">.</span><span class="token function">encoding</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span>
            <span class="token comment">// 忽略丢失的migration文件</span>
            <span class="token punctuation">.</span><span class="token function">ignoreMissingMigrations</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
            <span class="token comment">// 当迁移发现数据库非空且存在没有元数据的表时，自动执行基准迁移，新建schema_version表</span>
            <span class="token punctuation">.</span><span class="token function">baselineOnMigrate</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
            <span class="token comment">// 是否验证migration文件</span>
            <span class="token punctuation">.</span><span class="token function">validateMigrationNaming</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
            <span class="token comment">// 禁用flyway的clean操作，clean会清除掉对应数据库Schema中所有的对象，包括表结构，视图，存储过程等</span>
            <span class="token punctuation">.</span><span class="token function">cleanDisabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
            <span class="token comment">// 是否可以无须执行</span>
            <span class="token punctuation">.</span><span class="token function">outOfOrder</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
            <span class="token comment">// 版本化SQL迁移文件名前缀,可以不用配置，默认就是V</span>
            <span class="token punctuation">.</span><span class="token function">sqlMigrationPrefix</span><span class="token punctuation">(</span><span class="token string">&quot;V&quot;</span><span class="token punctuation">)</span>
            <span class="token comment">// 配置扩展名,可以不用配置，默认就是.sql</span>
            <span class="token punctuation">.</span><span class="token function">sqlMigrationSuffixes</span><span class="token punctuation">(</span><span class="token string">&quot;.sql&quot;</span><span class="token punctuation">)</span>
            <span class="token comment">// version与name的分隔符，可以不用配置，默认就是__</span>
            <span class="token punctuation">.</span><span class="token function">sqlMigrationSeparator</span><span class="token punctuation">(</span><span class="token string">&quot;__&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">migrate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="baselineonmigrate" tabindex="-1"><a class="header-anchor" href="#baselineonmigrate" aria-hidden="true">#</a> baselineOnMigrate</h4><p>如果flyway 不是项目初期引入，而是在数据库已有表的情况下引入的</p><p>必须设置 baselineOnMigrate true，baselineVersion 1.0.0</p><p>设置该配置启动项目后，flyway 就会在数据库中创建 flyway_schema_history 表</p><p>并且会往该表中插入一条 version = 1.0.0 的建表记录</p><p>如果迁移数据有 V1.0.0__ 开头的文件扫描文件会忽略该文件不执行迁移</p>`,23),o=[p];function i(c,l){return s(),a("div",null,o)}const r=n(e,[["render",i],["__file","Flyway管理数据库表结构.html.vue"]]);export{r as default};
