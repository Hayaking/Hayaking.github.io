import{_ as e,V as i,W as a,Y as l}from"./framework.44032428.js";const r={},t=l('<h2 id="一、什么是死锁" tabindex="-1"><a class="header-anchor" href="#一、什么是死锁" aria-hidden="true">#</a> 一、什么是死锁</h2><p>一组进程中的每一个进程都在等待仅有该组进程中的其它进程才能引发的事件，那么该组进程是死锁的。</p><h2 id="二、死锁的必要条件" tabindex="-1"><a class="header-anchor" href="#二、死锁的必要条件" aria-hidden="true">#</a> 二、死锁的必要条件</h2><p>产生死锁必须具备下列四个条件，缺一不可：</p><ul><li>互斥：进程对获取到的资源进行排他性使用</li><li>请求和保持：进程已经至少保持了一个资源，但又提出了新的资源请求</li><li>不可剥夺：进程已获得的资源在使用完成之前，不能被抢占</li><li>循环等待：发生死锁时，必须存在一个进程一个资源的循环链</li></ul><h2 id="三、处理死锁" tabindex="-1"><a class="header-anchor" href="#三、处理死锁" aria-hidden="true">#</a> 三、处理死锁</h2><ul><li>预防死锁：去避免同时满足四个必要条件</li><li>避免死锁：通过某种手段，避免进入不安全状态。银行家算法、安全性算法</li><li>检测死锁：监控死锁的发生，</li><li>解除死锁：当监控到死锁发生时，通过撤销进程等手段破坏四个必要条件，解除死锁</li></ul>',7),h=[t];function c(d,n){return i(),a("div",null,h)}const o=e(r,[["render",c],["__file","死锁.html.vue"]]);export{o as default};
