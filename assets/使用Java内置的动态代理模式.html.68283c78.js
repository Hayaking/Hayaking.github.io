const e=JSON.parse('{"key":"v-63c855ae","path":"/java/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E4%BD%BF%E7%94%A8Java%E5%86%85%E7%BD%AE%E7%9A%84%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F.html","title":"使用Java内置的动态代理模式","lang":"zh-CN","frontmatter":{"author":"haya","title":"使用Java内置的动态代理模式","date":"2019-06-16T00:00:00.000Z","article":true,"timeline":true,"category":["java"],"tag":["java","设计模式"],"description":"一、什么是动态代理 利用反射机制生成一个实现代理接口的匿名类，在调用具体方法前调用InvokeHandler来处理。即动态的生成静态代理 二、Java提供的动态代理 InvocationHandler: java.lang.reflect Interface InvocationHandler public interface InvocationHa...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/java/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E4%BD%BF%E7%94%A8Java%E5%86%85%E7%BD%AE%E7%9A%84%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"Haya的博客"}],["meta",{"property":"og:title","content":"使用Java内置的动态代理模式"}],["meta",{"property":"og:description","content":"一、什么是动态代理 利用反射机制生成一个实现代理接口的匿名类，在调用具体方法前调用InvokeHandler来处理。即动态的生成静态代理 二、Java提供的动态代理 InvocationHandler: java.lang.reflect Interface InvocationHandler public interface InvocationHa..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-25T10:10:12.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"haya"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:published_time","content":"2019-06-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-25T10:10:12.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"一、什么是动态代理","slug":"一、什么是动态代理","link":"#一、什么是动态代理","children":[]},{"level":2,"title":"二、Java提供的动态代理","slug":"二、java提供的动态代理","link":"#二、java提供的动态代理","children":[]},{"level":2,"title":"三、先讲讲静态代理","slug":"三、先讲讲静态代理","link":"#三、先讲讲静态代理","children":[]},{"level":2,"title":"四、如何使用Java提供的动态代理模式","slug":"四、如何使用java提供的动态代理模式","link":"#四、如何使用java提供的动态代理模式","children":[]}],"git":{"createdTime":1671963012000,"updatedTime":1671963012000,"contributors":[{"name":"guohaoyang","email":"haoyang.guo@duobei.com","commits":1}]},"readingTime":{"minutes":6.39,"words":1917},"autoDesc":true,"localizedDate":"2019年6月16日","filePathRelative":"java/设计模式/使用Java内置的动态代理模式.md"}');export{e as data};
