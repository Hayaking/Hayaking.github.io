const t=JSON.parse('{"key":"v-7ca390da","path":"/java/Java%E5%9F%BA%E7%A1%80/%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AAAnnotationProcessor.html","title":"实现一个AnnotationProcessor","lang":"zh-CN","frontmatter":{"author":"haya","title":"实现一个AnnotationProcessor","date":"2022-03-08T00:00:00.000Z","article":true,"timeline":true,"category":["java"],"tag":["annotation","annotation processor"],"description":"什么是Annotation Processor 注解大家肯定都很常用，Annotation Processor就是专门在编译期处理注解用的，像lombok就是这样的。编译期做的好处就是不用像在运行期处理注解那样，到处调反射api，性能更高。 实现 实现一个@ToString的注解，能够标注在类上，在编译期间重写一个toString方法，让toStrin...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/java/Java%E5%9F%BA%E7%A1%80/%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AAAnnotationProcessor.html"}],["meta",{"property":"og:site_name","content":"Haya的博客"}],["meta",{"property":"og:title","content":"实现一个AnnotationProcessor"}],["meta",{"property":"og:description","content":"什么是Annotation Processor 注解大家肯定都很常用，Annotation Processor就是专门在编译期处理注解用的，像lombok就是这样的。编译期做的好处就是不用像在运行期处理注解那样，到处调反射api，性能更高。 实现 实现一个@ToString的注解，能够标注在类上，在编译期间重写一个toString方法，让toStrin..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-30T08:44:30.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"haya"}],["meta",{"property":"article:tag","content":"annotation"}],["meta",{"property":"article:tag","content":"annotation processor"}],["meta",{"property":"article:published_time","content":"2022-03-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-30T08:44:30.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"什么是Annotation Processor","slug":"什么是annotation-processor","link":"#什么是annotation-processor","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[{"level":3,"title":"声明注解","slug":"声明注解","link":"#声明注解","children":[]},{"level":3,"title":"声明Annotation Processor","slug":"声明annotation-processor","link":"#声明annotation-processor","children":[]},{"level":3,"title":"生成方法","slug":"生成方法","link":"#生成方法","children":[]},{"level":3,"title":"利用SPI声明Json处理器","slug":"利用spi声明json处理器","link":"#利用spi声明json处理器","children":[]},{"level":3,"title":"测试效果","slug":"测试效果","link":"#测试效果","children":[]}]},{"level":2,"title":"注意","slug":"注意","link":"#注意","children":[]}],"git":{"createdTime":1672239939000,"updatedTime":1672389870000,"contributors":[{"name":"guohaoyang","email":"haoyang.guo@duobei.com","commits":2}]},"readingTime":{"minutes":2.91,"words":873},"autoDesc":true,"localizedDate":"2022年3月8日","filePathRelative":"java/Java基础/实现一个AnnotationProcessor.md"}');export{t as data};
