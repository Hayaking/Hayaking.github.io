const t=JSON.parse('{"key":"v-d520f5ca","path":"/java/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/","title":"设计模式","lang":"zh-CN","frontmatter":{"title":"设计模式","index":false,"article":false,"date":"--","description":"使用Java内置的观察者模式 (使用Java内置的观察者模式.md); 使用Java内置的动态代理模式 (使用Java内置的动态代理模式.md); CGlib动态代理 (CGlib动态代理.md); 装饰器模式 (装饰器模式.md);","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/java/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}],["meta",{"property":"og:site_name","content":"Haya的博客"}],["meta",{"property":"og:title","content":"设计模式"}],["meta",{"property":"og:description","content":"使用Java内置的观察者模式 (使用Java内置的观察者模式.md); 使用Java内置的动态代理模式 (使用Java内置的动态代理模式.md); CGlib动态代理 (CGlib动态代理.md); 装饰器模式 (装饰器模式.md);"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-01-12T03:28:48.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-01-12T03:28:48.000Z"}]]},"excerpt":"","headers":[],"git":{"createdTime":1672415002000,"updatedTime":1673494128000,"contributors":[{"name":"guohaoyang","email":"haoyang.guo@duobei.com","commits":3}]},"readingTime":{"minutes":0.27,"words":80},"autoDesc":true,"filePathRelative":"java/设计模式/README.md"}');export{t as data};
