import{_ as e,V as a,W as l,X as s}from"./framework.7aad78ec.js";const i={},n=s(`<h2 id="b-树和-b-树的区别" tabindex="-1"><a class="header-anchor" href="#b-树和-b-树的区别" aria-hidden="true">#</a> B 树和 B+树的区别</h2><ul><li>存储不同：B+树存储有冗余。 <ul><li>B+树的所有数据分布在叶子节点上，非叶子节点只存储索引值。</li><li>B树的所有数据分布在非叶子或叶子节点上。</li></ul></li><li>结构不同：B+树叶子结点通过指针连接成链表，能够实现范围查询；B树则没有</li><li>查询方式不同：B+树需要根据非叶子节点来定位到叶子结点上的完整数据；B树则不需要，查到直接返回，没查到就一直遍历。</li></ul><h2 id="b-树相比b树优点" tabindex="-1"><a class="header-anchor" href="#b-树相比b树优点" aria-hidden="true">#</a> B+树相比B树优点</h2><ul><li>非叶子节点相比B树，相同大小的前提下，数据量更多，一次IO可以更大概率的筛选到目标数据所在位置，IO次数要比B树少。</li><li>叶子节点构成了有序链表，范围查询更有优势</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>Mysql的<span class="token keyword">innodb</span>是以页为存储单位的，每个B<span class="token operator">+</span>树的叶子节点都是一个页的大小的倍数，默认一页的大小是 <span class="token number">16</span>K
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),r=[n];function d(t,c){return a(),l("div",null,r)}const u=e(i,[["render",d],["__file","B+树.html.vue"]]);export{u as default};
