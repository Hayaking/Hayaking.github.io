const e=JSON.parse('{"key":"v-4367c29c","path":"/knowledge/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/IO%E6%A8%A1%E5%9E%8B.html","title":"IO模型","lang":"zh-CN","frontmatter":{"author":"haya","title":"IO模型","date":"2021-03-01T00:00:00.000Z","article":true,"timeline":true,"category":["基础知识"],"tag":["操作系统","IO模型"],"description":"一、阻塞式 I/O 二、非阻塞式 I/O 不断的执行系统调用来获知 I/O 是否完成，这种方式称为轮询(polling): 三、I/O 多路复用 使用 select、poll、epoll等待数据，并且可以同时等待多个Socket。当有socket就绪时，再将socket拷贝到用户态给进程处理。 它可以让单个进程具有处理多个 I/O 事件的能力。又被称为...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/knowledge/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/IO%E6%A8%A1%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"Haya的博客"}],["meta",{"property":"og:title","content":"IO模型"}],["meta",{"property":"og:description","content":"一、阻塞式 I/O 二、非阻塞式 I/O 不断的执行系统调用来获知 I/O 是否完成，这种方式称为轮询(polling): 三、I/O 多路复用 使用 select、poll、epoll等待数据，并且可以同时等待多个Socket。当有socket就绪时，再将socket拷贝到用户态给进程处理。 它可以让单个进程具有处理多个 I/O 事件的能力。又被称为..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-01-04T07:24:04.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"haya"}],["meta",{"property":"article:tag","content":"操作系统"}],["meta",{"property":"article:tag","content":"IO模型"}],["meta",{"property":"article:published_time","content":"2021-03-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-01-04T07:24:04.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"一、阻塞式 I/O","slug":"一、阻塞式-i-o","link":"#一、阻塞式-i-o","children":[]},{"level":2,"title":"二、非阻塞式 I/O","slug":"二、非阻塞式-i-o","link":"#二、非阻塞式-i-o","children":[]},{"level":2,"title":"三、I/O 多路复用","slug":"三、i-o-多路复用","link":"#三、i-o-多路复用","children":[{"level":3,"title":"3.1 select","slug":"_3-1-select","link":"#_3-1-select","children":[]},{"level":3,"title":"3.2 poll","slug":"_3-2-poll","link":"#_3-2-poll","children":[]},{"level":3,"title":"3.3 epoll","slug":"_3-3-epoll","link":"#_3-3-epoll","children":[]}]},{"level":2,"title":"四、信号驱动 I/O","slug":"四、信号驱动-i-o","link":"#四、信号驱动-i-o","children":[]},{"level":2,"title":"五、异步 I/O","slug":"五、异步-i-o","link":"#五、异步-i-o","children":[]},{"level":2,"title":"六、Reactor","slug":"六、reactor","link":"#六、reactor","children":[{"level":3,"title":"6.1 单 Reactor 单进程 / 单线程","slug":"_6-1-单-reactor-单进程-单线程","link":"#_6-1-单-reactor-单进程-单线程","children":[]},{"level":3,"title":"6.2 单 Reactor 多线程 / 多进程","slug":"_6-2-单-reactor-多线程-多进程","link":"#_6-2-单-reactor-多线程-多进程","children":[]},{"level":3,"title":"6.3 多 Reactor 多进程 / 多线程","slug":"_6-3-多-reactor-多进程-多线程","link":"#_6-3-多-reactor-多进程-多线程","children":[]}]}],"git":{"createdTime":1672817044000,"updatedTime":1672817044000,"contributors":[{"name":"guohaoyang","email":"haoyang.guo@duobei.com","commits":1}]},"readingTime":{"minutes":6.28,"words":1884},"autoDesc":true,"localizedDate":"2021年3月1日","filePathRelative":"knowledge/操作系统/IO模型.md"}');export{e as data};
