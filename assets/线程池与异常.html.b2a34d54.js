const t=JSON.parse('{"key":"v-4b18d4a4","path":"/java/Java%E5%9F%BA%E7%A1%80/%E7%BA%BF%E7%A8%8B%E6%B1%A0%E4%B8%8E%E5%BC%82%E5%B8%B8.html","title":"线程池与异常","lang":"zh-CN","frontmatter":{"author":"haya","title":"线程池与异常","date":"2023-01-31T00:00:00.000Z","article":true,"timeline":true,"category":["java"],"tag":["线程池"],"description":"一、处理线程池内的线程的异常 1. 在runnable中使用try-catch去捕获所有异常，自己可以处理并打印异常； 2. 如果在runnable中不使用try-catch去捕获异常，那么submit方法会吞掉异常，execute会抛出异常： execute的异常会在子线程中抛出；; 而submit的话，当调用其返回的future的get方法时，会在...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/java/Java%E5%9F%BA%E7%A1%80/%E7%BA%BF%E7%A8%8B%E6%B1%A0%E4%B8%8E%E5%BC%82%E5%B8%B8.html"}],["meta",{"property":"og:site_name","content":"Haya的博客"}],["meta",{"property":"og:title","content":"线程池与异常"}],["meta",{"property":"og:description","content":"一、处理线程池内的线程的异常 1. 在runnable中使用try-catch去捕获所有异常，自己可以处理并打印异常； 2. 如果在runnable中不使用try-catch去捕获异常，那么submit方法会吞掉异常，execute会抛出异常： execute的异常会在子线程中抛出；; 而submit的话，当调用其返回的future的get方法时，会在..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-01-31T06:33:04.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"haya"}],["meta",{"property":"article:tag","content":"线程池"}],["meta",{"property":"article:published_time","content":"2023-01-31T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-01-31T06:33:04.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"一、处理线程池内的线程的异常","slug":"一、处理线程池内的线程的异常","link":"#一、处理线程池内的线程的异常","children":[]},{"level":2,"title":"二、有异常的线程会怎么样","slug":"二、有异常的线程会怎么样","link":"#二、有异常的线程会怎么样","children":[]}],"git":{"createdTime":1675133811000,"updatedTime":1675146784000,"contributors":[{"name":"guohaoyang","email":"haoyang.guo@duobei.com","commits":2}]},"readingTime":{"minutes":0.98,"words":294},"autoDesc":true,"localizedDate":"2023年1月31日","filePathRelative":"java/Java基础/线程池与异常.md"}');export{t as data};
