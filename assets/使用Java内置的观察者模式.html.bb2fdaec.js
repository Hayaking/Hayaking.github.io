const e=JSON.parse('{"key":"v-320f6276","path":"/java/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E4%BD%BF%E7%94%A8Java%E5%86%85%E7%BD%AE%E7%9A%84%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F.html","title":"使用Java内置的观察者模式","lang":"zh-CN","frontmatter":{"author":"haya","title":"使用Java内置的观察者模式","date":"2019-05-12T00:00:00.000Z","article":true,"timeline":true,"category":["java"],"tag":["java","设计模式"],"description":"一、什么是观察者模式 ... 二、Java提供的观察者模式 Java提供了一个Observable类，顾名思义可知“可观察的”。当你有一个类需要被观察时，需要继承此类。 Java还提供了一个Observer接口，顾名思义可知“观察者”。当你有一个类需要观察别的类时，需要实现此接口。 三、如何使用Java提供的观察者模式 假设现在你有一个WeatherD...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/java/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E4%BD%BF%E7%94%A8Java%E5%86%85%E7%BD%AE%E7%9A%84%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"Haya的博客"}],["meta",{"property":"og:title","content":"使用Java内置的观察者模式"}],["meta",{"property":"og:description","content":"一、什么是观察者模式 ... 二、Java提供的观察者模式 Java提供了一个Observable类，顾名思义可知“可观察的”。当你有一个类需要被观察时，需要继承此类。 Java还提供了一个Observer接口，顾名思义可知“观察者”。当你有一个类需要观察别的类时，需要实现此接口。 三、如何使用Java提供的观察者模式 假设现在你有一个WeatherD..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-25T10:10:12.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"haya"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:published_time","content":"2019-05-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-25T10:10:12.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"一、什么是观察者模式","slug":"一、什么是观察者模式","link":"#一、什么是观察者模式","children":[]},{"level":2,"title":"二、Java提供的观察者模式","slug":"二、java提供的观察者模式","link":"#二、java提供的观察者模式","children":[]},{"level":2,"title":"三、如何使用Java提供的观察者模式","slug":"三、如何使用java提供的观察者模式","link":"#三、如何使用java提供的观察者模式","children":[]},{"level":2,"title":"四、测试","slug":"四、测试","link":"#四、测试","children":[]}],"git":{"createdTime":1671963012000,"updatedTime":1671963012000,"contributors":[{"name":"guohaoyang","email":"haoyang.guo@duobei.com","commits":1}]},"readingTime":{"minutes":2.64,"words":793},"autoDesc":true,"localizedDate":"2019年5月12日","filePathRelative":"java/设计模式/使用Java内置的观察者模式.md"}');export{e as data};
