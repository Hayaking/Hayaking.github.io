const t=JSON.parse('{"key":"v-9f81ff92","path":"/algo/%E7%AE%97%E6%B3%95/Dijkstra%E7%AE%97%E6%B3%95.html","title":"Dijkstra算法","lang":"zh-CN","frontmatter":{"author":"haya","title":"Dijkstra算法","date":"2019-03-06T00:00:00.000Z","article":true,"timeline":true,"category":["数据结构与算法"],"tag":["算法","图","最短路","Dijkstra"],"description":"步骤 1. 输入图和起点 2. 建立优先队列（按距离起点的距离升序排列）和res（存储结果） 3. new一个起点，将其距离起点的距离设为0，入队 4. BFS 4.1. 出队 ，如果点没有出现在res，则将其放进去 4.2 将改点相邻的点入队（已经出现在res中的不再入队） 5. 打印结果 java: 参考：[Python] BFS和DFS算法（第3...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/algo/%E7%AE%97%E6%B3%95/Dijkstra%E7%AE%97%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"Haya的博客"}],["meta",{"property":"og:title","content":"Dijkstra算法"}],["meta",{"property":"og:description","content":"步骤 1. 输入图和起点 2. 建立优先队列（按距离起点的距离升序排列）和res（存储结果） 3. new一个起点，将其距离起点的距离设为0，入队 4. BFS 4.1. 出队 ，如果点没有出现在res，则将其放进去 4.2 将改点相邻的点入队（已经出现在res中的不再入队） 5. 打印结果 java: 参考：[Python] BFS和DFS算法（第3..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-25T10:10:12.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"haya"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:tag","content":"图"}],["meta",{"property":"article:tag","content":"最短路"}],["meta",{"property":"article:tag","content":"Dijkstra"}],["meta",{"property":"article:published_time","content":"2019-03-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-25T10:10:12.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"步骤","slug":"步骤","link":"#步骤","children":[]}],"git":{"createdTime":1671963012000,"updatedTime":1671963012000,"contributors":[{"name":"guohaoyang","email":"haoyang.guo@duobei.com","commits":1}]},"readingTime":{"minutes":1.84,"words":551},"autoDesc":true,"localizedDate":"2019年3月6日","filePathRelative":"algo/算法/Dijkstra算法.md"}');export{t as data};
