import{_ as a,V as e,W as t,Y as c}from"./framework.591e63b2.js";const h={},d=c('<h2 id="一、什么是watch机制" tabindex="-1"><a class="header-anchor" href="#一、什么是watch机制" aria-hidden="true">#</a> 一、什么是Watch机制</h2><p>前面提到的<code>get /nodeName watch</code>命令就是用到了watch机制。</p><p>当znode变化时，通过watch机制可以通知给客户端，客户端收到通知后回去获取具体的内容。这样就不需要通过轮询的方式让换客户端去感知znode变化了。</p><h2 id="二、watch特性" tabindex="-1"><a class="header-anchor" href="#二、watch特性" aria-hidden="true">#</a> 二、Watch特性</h2><ul><li>一次性。当watch完成一次通知后就会失效</li><li>顺序性。watch通知是串行的执行的</li><li>轻量级。通知内容仅做通知，不包含节点的全部数据</li></ul>',5),i=[d];function n(o,r){return e(),t("div",null,i)}const s=a(h,[["render",n],["__file","2.watch.html.vue"]]);export{s as default};
