import{_ as n,V as a,W as s,a0 as e}from"./framework.1bd1ad73.js";const t={},p=e(`<p>clickhouse拥有kafka表引擎，支持从kafka读取数据。</p><h2 id="建表示例" tabindex="-1"><a class="header-anchor" href="#建表示例" aria-hidden="true">#</a> 建表示例</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- topic.topic_dwd_gms_log definition</span>

<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> db<span class="token punctuation">.</span>tableName<span class="token punctuation">(</span>
    <span class="token identifier"><span class="token punctuation">\`</span>date<span class="token punctuation">\`</span></span> <span class="token keyword">Date</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>timestamp<span class="token punctuation">\`</span></span> DateTime64<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>type<span class="token punctuation">\`</span></span> String<span class="token punctuation">,</span>
    <span class="token comment">-- ...</span>
<span class="token punctuation">)</span>
<span class="token keyword">ENGINE</span> <span class="token operator">=</span> Kafka
SETTINGS kafka_broker_list <span class="token operator">=</span> <span class="token string">&#39;kafka-service.kafka:9092&#39;</span><span class="token punctuation">,</span>
 kafka_topic_list <span class="token operator">=</span> <span class="token string">&#39;topicName&#39;</span><span class="token punctuation">,</span>
 kafka_group_name <span class="token operator">=</span> <span class="token string">&#39;groupName&#39;</span><span class="token punctuation">,</span>
 kafka_format <span class="token operator">=</span> <span class="token string">&#39;JSONEachRow&#39;</span><span class="token punctuation">,</span>
 kafka_row_delimiter <span class="token operator">=</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">,</span>
 input_format_import_nested_json <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配合物化视图读取kafka表" tabindex="-1"><a class="header-anchor" href="#配合物化视图读取kafka表" aria-hidden="true">#</a> 配合物化视图读取kafka表</h2><p>建好kafka表后，clickhouse并不会主动读取kafka，因为没有人读取kafka表。</p><p>所以需要添加一个物化视图，去读取kafka表的数据，并切将数据持久化到mergeTree中。</p><p>大概流程如下：kafka-&gt;kafka表-&gt;物化视图-&gt;持久化表(mergeTree)</p><h3 id="创建物化视图" tabindex="-1"><a class="header-anchor" href="#创建物化视图" aria-hidden="true">#</a> 创建物化视图</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> MATERIALIZED <span class="token keyword">VIEW</span> 物化视图表名 <span class="token keyword">TO</span> 持久化表<span class="token punctuation">(</span>
    <span class="token identifier"><span class="token punctuation">\`</span>date<span class="token punctuation">\`</span></span> <span class="token keyword">Date</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>timestamp<span class="token punctuation">\`</span></span> DateTime64<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>type<span class="token punctuation">\`</span></span> String<span class="token punctuation">,</span>
    <span class="token comment">-- ...</span>
<span class="token punctuation">)</span> <span class="token keyword">AS</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span>
<span class="token keyword">FROM</span> kafka表<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建持久化表" tabindex="-1"><a class="header-anchor" href="#创建持久化表" aria-hidden="true">#</a> 创建持久化表</h3><p>参考merge tree建表</p>`,11),i=[p];function o(c,l){return a(),s("div",null,i)}const r=n(t,[["render",o],["__file","2.Kafka引擎.html.vue"]]);export{r as default};
