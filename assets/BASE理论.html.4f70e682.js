import{_ as e,V as a,W as t,Y as l}from"./framework.44032428.js";const s={},i=l('<h2 id="什么是base理论" tabindex="-1"><a class="header-anchor" href="#什么是base理论" aria-hidden="true">#</a> 什么是Base理论</h2><p>BASE 是 Basically Available（基本可用） 、Soft-state（软状态） 和 Eventually Consistent（最终一致性） 三个短语的缩写。BASE 理论是对 CAP 中一致性 C 和可用性 A 权衡的结果，其来源于对大规模互联网系统分布式实践的总结，是基于 CAP 定理逐步演化而来的，它大大降低了我们对系统的要求。</p><p>BASE 理论本质上是对 CAP 的延伸和补充，更具体地说，是对 CAP 中 AP 方案的一个补充。</p><p>即使无法做到强一致性，但每个应用都可以根据自身业务特点，采用适当的方式来使系统达到<mark>最终一致性</mark>。</p><ul><li>基本可用。基本可用是指分布式系统在出现不可预知故障的时候，允许损失部分可用性。但是，这绝不等价于系统不可用。</li><li>软状态。软状态指允许系统中的数据存在中间状态（CAP 理论中的数据不一致），并认为该中间状态的存在不会影响系统的整体可用性，即允许系统在不同节点的数据副本之间进行数据同步的过程存在延时。</li><li>最终一致性。最终一致性强调的是系统中所有的数据副本，在经过一段时间的同步后，最终能够达到一个一致的状态。因此，最终一致性的本质是需要系统保证最终数据能够达到一致，而不需要实时保证系统数据的强一致性。</li></ul>',5),c=[i];function n(r,o){return a(),t("div",null,c)}const A=e(s,[["render",n],["__file","BASE理论.html.vue"]]);export{A as default};
